AWSTemplateFormatVersion: "2010-09-09"
Description: UDACITY Nanodegree Project 2 Submission - Rohit Sachdev (Natwest)

Parameters:
  EnvironmentName:
      Description: Prefix String
      Type: String

  VpcCIDR: 
      Description: Enter the IP range for VPC
      Type: String
      Default: 10.0.0.0/16

  PublicSubnet1CIDR:
      Description: Enter the IP range for Public Subnet in us-east-1a
      Type: String
      Default: 10.0.0.0/24

  PublicSubnet2CIDR:
      Description: Enter the IP range for Public Subnet in us-east-1b
      Type: String
      Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
      Description: Enter the IP range for Private Subnet in us-east-1a
      Type: String
      Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
      Description: Enter the IP range for Private Subnet in us-east-1b
      Type: String
      Default: 10.0.3.0/24

Resources:
  VPC: 
      Type: AWS::EC2::VPC
      Properties:
          CidrBlock: !Ref VpcCIDR
          EnableDnsHostnames: true

  InternetGateway:
      Type: AWS::EC2::InternetGateway
      Properties:
          Tags:
            - Key: Name
              Value: !Ref EnvironmentName
          
  InternetGatewayAttachment:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
          InternetGatewayId: !Ref InternetGateway
          VpcId: !Ref VPC
  
  Pubnet1: 
      Type: AWS::EC2::Subnet
      Properties:
          AvailabilityZone: !Select [ 0, !GetAZs '' ]
          CidrBlock: !Ref PublicSubnet1CIDR
          MapPublicIpOnLaunch: true
          VpcId: !Ref VPC
  
  Pubnet2: 
      Type: AWS::EC2::Subnet
      Properties:
          AvailabilityZone: !Select [ 1, !GetAZs '' ]
          CidrBlock: !Ref PublicSubnet2CIDR
          MapPublicIpOnLaunch: true
          VpcId: !Ref VPC

  Prinet1: 
      Type: AWS::EC2::Subnet
      Properties:
          AvailabilityZone: !Select [ 0, !GetAZs '' ]
          CidrBlock: !Ref PrivateSubnet1CIDR
          MapPublicIpOnLaunch: false
          VpcId: !Ref VPC
          
  Prinet2: 
      Type: AWS::EC2::Subnet
      Properties:
          AvailabilityZone: !Select [ 1, !GetAZs '' ]
          CidrBlock: !Ref PrivateSubnet2CIDR
          MapPublicIpOnLaunch: false
          VpcId: !Ref VPC
          
  NGW1EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties: 
          Domain: vpc

  NGW2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
          Domain: vpc

  NatGateway1: 
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt NGW1EIP.AllocationId
          SubnetId: !Ref Pubnet1

  NatGateway2: 
      Type: AWS::EC2::NatGateway
      Properties:
          AllocationId: !GetAtt NGW2EIP.AllocationId
          SubnetId: !Ref Pubnet2
  
  PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref VPC

  DefaultPublicRoute: 
      Type: AWS::EC2::Route
      DependsOn: InternetGatewayAttachment
      Properties: 
          RouteTableId: !Ref PublicRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId: !Ref InternetGateway

  Pubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref Pubnet1

  Pubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref Pubnet2

  PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref VPC

  DefaultPrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateRouteTable1
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway1

  Prinet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable1
          SubnetId: !Ref Prinet1

  PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref VPC

  DefaultPrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateRouteTable2
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref NatGateway2

  Prinet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable2
          SubnetId: !Ref Prinet2

Outputs: 

  VPC: 
      Description: VPC ID
      Value: !Ref VPC
      Export:
        Name: !Sub ${EnvironmentName}-VPCID

  Pubnet1:
      Description: Public Subnet 1
      Value: !Ref Pubnet1
      Export:
        Name: !Sub ${EnvironmentName}-PUBNET1

  Pubnet2: 
      Description: Public Subnet 2
      Value: !Ref Pubnet2
      Export:
        Name: !Sub ${EnvironmentName}-PUBNET2

  Prinet1:
      Description: Private Subnet 1
      Value: !Ref Prinet1
      Export:
        Name: !Sub ${EnvironmentName}-PRINET1

  Prinet2: 
      Description: Private Subnet 2
      Value: !Ref Prinet2
      Export:
        Name: !Sub ${EnvironmentName}-PRINET2

  PublicSubnets:
      Description: Public subnets
      Value: !Join [ ",", [ !Ref Pubnet1, !Ref Pubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PUBNETS

  PrivateSubnets:
      Description: Private subnets
      Value: !Join [ ",", [ !Ref Prinet1, !Ref Prinet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PRINETS